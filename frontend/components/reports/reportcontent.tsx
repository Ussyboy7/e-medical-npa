// /components/ui/reports/ReportContent.tsx
"use client";

import React from "react";
import { ReportData } from "@/types/reports";

/**
 * ReportContent
 * Renders any ReportData nicely,
 * sectioned based on report type.
 */
export default function ReportContent({ report }: { report: ReportData }) {
  const { type, data } = report;

  return (
    <div className="space-y-6">
      <h2 className="text-2xl font-bold">{report.title}</h2>
      <p className="text-sm text-muted-foreground mb-4">
        Generated by: {report.generatedBy} | Date: {report.dateGenerated}
      </p>

      {/* Observation Report */}
      {type === "observation" && (
        <div className="space-y-2">
          <p><strong>Month:</strong> {data.month}</p>
          <p><strong>Year:</strong> {data.year}</p>
          <div>
            <h3 className="text-lg font-semibold">Categories</h3>
            <ul className="list-disc pl-6">
              {Object.entries(data.categories).map(([category, count]) => (
                <li key={category}>{category}: {String(count)}</li>
              ))}
            </ul>
          </div>
          <p><strong>Total:</strong> {data.total}</p>
        </div>
      )}

      {/* Monthly Summary */}
      {type === "monthly-summary" && (
        <div className="space-y-2">
          <p><strong>Total Patients:</strong> {data.totalPatients}</p>
          <p><strong>New Registrations:</strong> {data.newRegistrations}</p>
          <p><strong>Total Visits:</strong> {data.totalVisits}</p>
          <p><strong>Emergency Visits:</strong> {data.emergencyVisits}</p>
          <p><strong>Routine Checkups:</strong> {data.routineCheckups}</p>
          <p><strong>Follow Ups:</strong> {data.followUps}</p>
          <p><strong>Consultations:</strong> {data.consultations}</p>
          <p><strong>Active Patients:</strong> {data.activePatients}</p>
          <p><strong>Inactive Patients:</strong> {data.inactivePatients}</p>
        </div>
      )}

      {/* Patient Statistics */}
      {type === "patient-statistics" && (
        <div className="space-y-4">
          <div>
            <h3 className="font-semibold">By Category</h3>
            <ul className="list-disc pl-6">
              {Object.entries(data.byCategory).map(([cat, count]) => (
                <li key={cat}>{cat}: {String(count)}</li>
              ))}
            </ul>
          </div>
          <div>
            <h3 className="font-semibold">By Gender</h3>
            <ul className="list-disc pl-6">
              {Object.entries(data.byGender).map(([gender, count]) => (
                <li key={gender}>{gender}: {String(count)}</li>
              ))}
            </ul>
          </div>
          <div>
            <h3 className="font-semibold">By Age Group</h3>
            <ul className="list-disc pl-6">
              {Object.entries(data.byAgeGroup).map(([range, count]) => (
                <li key={range}>{range}: {String(count)}</li>
              ))}
            </ul>
          </div>
          <p><strong>Total Dependents:</strong> {data.totalDependents}</p>
          <p><strong>Average Age:</strong> {data.averageAge}</p>
        </div>
      )}

      {/* Visit Analysis */}
      {type === "visit-analysis" && (
        <div className="space-y-4">
          <p><strong>Total Visits:</strong> {data.totalVisits}</p>

          <div>
            <h3 className="font-semibold">By Type</h3>
            <ul className="list-disc pl-6">
              {Object.entries(data.byType).map(([type, count]) => (
                <li key={type}>{type}: {String(count)}</li>
              ))}
            </ul>
          </div>

          <div>
            <h3 className="font-semibold">By Status</h3>
            <ul className="list-disc pl-6">
              {Object.entries(data.byStatus).map(([status, count]) => (
                <li key={status}>{status}: {String(count)}</li>
              ))}
            </ul>
          </div>

          <div>
            <h3 className="font-semibold">Common Diagnoses</h3>
            <ul className="list-disc pl-6">
              {data.commonDiagnoses.map((d, idx) => (
                <li key={idx}>{d.diagnosis}: {String(d.count)}</li>
              ))}
            </ul>
          </div>

          <div>
            <h3 className="font-semibold">Common Symptoms</h3>
            <ul className="list-disc pl-6">
              {data.commonSymptoms.map((s, idx) => (
                <li key={idx}>{s.symptom}: {String(s.count)}</li>
              ))}
            </ul>
          </div>

          <p><strong>Average Visits per Patient:</strong> {data.averageVisitsPerPatient}</p>
        </div>
      )}

      {/* Medical Conditions */}
      {type === "medical-conditions" && (
        <div className="space-y-4">
          <div>
            <h3 className="font-semibold">Conditions</h3>
            <ul className="list-disc pl-6">
              {data.conditions.map((c, idx) => (
                <li key={idx}>
                  {c.condition} ({String(c.patientCount)} patients, {c.percentage}%)
                </li>
              ))}
            </ul>
          </div>

          <div>
            <h3 className="font-semibold">Allergies</h3>
            <ul className="list-disc pl-6">
              {data.allergies.map((a, idx) => (
                <li key={idx}>
                  {a.allergy} ({String(a.patientCount)} patients, {a.percentage}%)
                </li>
              ))}
            </ul>
          </div>

          <div>
            <h3 className="font-semibold">Medications</h3>
            <ul className="list-disc pl-6">
              {data.medications.map((m, idx) => (
                <li key={idx}>
                  {m.medication} ({String(m.patientCount)} patients, {m.frequency}%)
                </li>
              ))}
            </ul>
          </div>
        </div>
      )}
    </div>
  );
}